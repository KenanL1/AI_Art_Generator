import React, { useEffect, useState } from "react";
import { useAppDispatch, useAppSelector } from "../store";
import { Card, FormField, Loader } from "../components";
import { CardType } from "../components/Card";
import {
  fetchPosts,
  selectLoading,
  selectPost,
} from "../store/Reducers/postSlice";

const RenderCards = ({ data, title }: { data: CardType[]; title: string }) => {
  if (data && data.length > 0) {
    return (
      <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
        {data.map((post) => (
          <Card key={post._id} {...post} />
        ))}
      </div>
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  // const [loading, setLoading] = useState<boolean>(false);
  // const [allPosts, setAllPosts] = useState<CardType[]>([]);
  const allPosts = useAppSelector(selectPost);
  const loading = useAppSelector(selectLoading);
  const [searchText, setSearchText] = useState<string>("");
  const [searchTimeout, setSearchTimeout] = useState<number>();
  const [searchedResults, setSearchedResults] = useState<CardType[]>([]);
  const dispatch = useAppDispatch();

  // Get post on inital render
  useEffect(() => {
    dispatch(fetchPosts());
  }, []);

  // When search input changes
  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <section className="mx-auto">
      {/* <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          AI Generated Art
        </h1>
        <p className="mt-2 text-[#666e75] text-[14px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI and Stable Diffusion
        </p>
      </div> */}

      <div className="mt-16">
        <FormField
          labelName="Search Images"
          type="text"
          name="text"
          placeholder="Search Prompt..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for{" "}
                <span className="text-[#222328]">{searchText}</span>:
              </h2>
            )}
            {searchText ? (
              <RenderCards
                data={searchedResults}
                title="No Search Results Found"
              />
            ) : (
              <RenderCards data={allPosts} title="No Posts Yet" />
            )}
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
